0x000:                      | .pos 0
0x000: 30f4c800000000000000 |     irmovq stack, %rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | 
0x018:                      | .align 8
0x018:                      |     ele1:
0x018: 0a00000000000000     |         .quad 0x00a
0x020: 2800000000000000     |         .quad ele2
0x028:                      |     ele2:
0x028: b000000000000000     |         .quad 0x0b0
0x030: 3800000000000000     |         .quad ele3
0x038:                      |     ele3:
0x038: 000c000000000000     |         .quad 0xc00
0x040: 0000000000000000     |         .quad 0
                            | 
0x048:                      | main: 
0x048: 30f71800000000000000 |     irmovq ele1,%rdi
0x052: 805c00000000000000   |     call sum_list
0x05b: 90                   |     ret
                            | 
                            | 
                            | # long sum_list(list_ptr list)
                            | # list in %rdi
0x05c:                      | sum_list:
0x05c: 30f80800000000000000 |     irmovq $8,%r8
0x066: 6300                 |     xorq %rax, %rax    # 初始化sum
0x068:                      | loop:
0x068: 50a70000000000000000 |     mrmovq (%rdi),%r10  # 取出ele_n的值
0x072: 20ab                 |     rrmovq %r10, %r11
0x074: 60a0                 |     addq %r10,%rax      # sum += ele_n->value
0x076: 6087                 |     addq %r8,%rdi       # 指针下移
0x078: 50770000000000000000 |     mrmovq (%rdi),%rdi   # 取next
0x082: 6277                 |     andq %rdi,%rdi      # 判断是否为NULL
0x084: 746800000000000000   |     jne loop
0x08d: 90                   |     ret
                            | 
0x0c8:                      | .pos 200
0x0c8:                      | stack:
