0x000:                      | .pos 0
0x000: 30f42c01000000000000 |     irmovq stack, %rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | 
0x018:                      | .align 8
0x018:                      |     ele1:
0x018: 0a00000000000000     |         .quad 0x00a
0x020: 2800000000000000     |         .quad ele2
0x028:                      |     ele2:
0x028: b000000000000000     |         .quad 0x0b0
0x030: 3800000000000000     |         .quad ele3
0x038:                      |     ele3:
0x038: 000c000000000000     |         .quad 0xc00
0x040: 0000000000000000     |         .quad 0
                            | 
0x048:                      | main: 
0x048: 30f71800000000000000 |     irmovq ele1,%rdi
0x052: 805c00000000000000   |     call rsum_list
0x05b: 90                   |     ret
                            | 
                            | 
                            | # long rsum_list(list_ptr list)
                            | # list in %rdi
0x05c:                      | rsum_list:
0x05c: 6277                 |     andq %rdi, %rdi
0x05e: 739f00000000000000   |     je end1
0x067: 30f80800000000000000 |     irmovq $8,%r8
0x071: 50270000000000000000 |     mrmovq (%rdi),%rdx      # 取出ele_n的值
0x07b: 6087                 |     addq %r8, %rdi          # 下移
0x07d: 50770000000000000000 |     mrmovq (%rdi),%rdi      # 取next
0x087: a02f                 |     pushq %rdx
0x089: 805c00000000000000   |     call rsum_list          # 递归
0x092: b02f                 |     popq %rdx
0x094: 6020                 |     addq %rdx, %rax         # sum += ele_n
0x096: 70a100000000000000   |     jmp end2    
0x09f:                      | end1: 
0x09f: 6300                 |     xorq %rax, %rax
0x0a1:                      | end2:
0x0a1: 90                   |     ret
                            | 
0x12c:                      | .pos 300
0x12c:                      | stack:
