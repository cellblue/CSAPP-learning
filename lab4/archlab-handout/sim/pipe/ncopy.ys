#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	iaddq $-10, %rdx			# if so, goto Done:
	jl Root
Loop0: 
	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	mrmovq 32(%rdi), %r12
	mrmovq 40(%rdi), %rbx
	mrmovq 48(%rdi), %rbp
	
	rmmovq %r8,(%rsi)
	rmmovq %r9,8(%rsi)
	rmmovq %r10,16(%rsi)
	rmmovq %r11,24(%rsi)
	rmmovq %r12,32(%rsi)
	rmmovq %rbx,40(%rsi)
	rmmovq %rbp,48(%rsi)

	andq %r8, %r8
	jle Loop1   
	iaddq $1,%rax
Loop1:
	andq %r9, %r9
	jle Loop2
	iaddq $1,%rax
Loop2:
	andq %r10, %r10
	jle Loop3
	iaddq $1,%rax
Loop3:
	andq %r11, %r11
	jle Loop4
	iaddq $1,%rax
Loop4:
	andq %r12, %r12
	jle Loop5
	iaddq $1,%rax
Loop5:
	andq %rbx, %rbx
	jle Loop6
	iaddq $1,%rax
Loop6:
	andq %rbp, %rbp
	jle Loop7
	iaddq $1,%rax
Loop7:
	mrmovq 56(%rdi), %r8
	mrmovq 64(%rdi), %r9
	mrmovq 72(%rdi), %r10

	rmmovq %r8,56(%rsi)
	rmmovq %r9,64(%rsi)
	rmmovq %r10,72(%rsi)

	andq %r8, %r8
	jle Loop8
	iaddq $1,%rax
Loop8:
	andq %r9, %r9
	jle Loop9
	iaddq $1,%rax
Loop9:
	iaddq $80, %rsi
	iaddq $80, %rdi
	andq %r10, %r10
	jle End1
	iaddq $1,%rax
End1:
	iaddq $-10, %rdx
	jge Loop0
Root:							# [0,1,2,3,4,5,6,7,8,9]
	iaddq 6, %rdx    			# len - 4
	jl Left
	jg Right
	je P4
Left:							# [0,1,2,3]
	iaddq 3, %rdx				# len - 1
	je P1
	iaddq -1, %rdx				# len - 2
	je P2
	iaddq -1, %rdx
	je P3
	ret
Right:							# [5,6,7,8,9]
	iaddq -2, %rdx 				# len -5
	jl P5		# len - 6
	je P6
	iaddq -2, %rdx				# len - 7
	jl P7		# len - 8
	je P8
P9: 
	mrmovq 64(%rdi), %r8
	andq %r8, %r8
	rmmovq %r8, 64(%rsi)
P8: 
	mrmovq 56(%rdi), %r8
	jle P88
	iaddq $1, %rax
P88:
	andq %r8, %r8
	rmmovq %r8, 56(%rsi)
P7: 
	mrmovq 48(%rdi), %r8
	jle P77
	iaddq $1, %rax
P77:
	andq %r8,%r8
	rmmovq %r8, 48(%rsi)
P6: 
	mrmovq 40(%rdi), %r8
	jle P66
	iaddq $1, %rax
P66:
	andq %r8, %r8
	rmmovq %r8, 40(%rsi)
P5: 
	mrmovq 32(%rdi), %r8
	jle P55
	iaddq $1, %rax
P55:
	andq %r8, %r8
	rmmovq %r8, 32(%rsi)
P4: 
	mrmovq 24(%rdi), %r8
	jle P44
	iaddq $1, %rax
P44:	
	andq %r8, %r8
	rmmovq %r8, 24(%rsi)
P3: 
	mrmovq 16(%rdi), %r8
	jle P33
	iaddq $1, %rax
P33:
	andq %r8, %r8
	rmmovq %r8, 16(%rsi)
P2: 
	mrmovq 8(%rdi), %r8
	jle P22
	iaddq $1, %rax
P22:
	andq %r8, %r8
	rmmovq %r8, 8(%rsi)
P1: 
	mrmovq (%rdi), %r8
	jle P11
	iaddq $1, %rax
P11:
	andq %r8, %r8
	rmmovq %r8, (%rsi)
	jle Done
	iaddq $1, %rax


##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
